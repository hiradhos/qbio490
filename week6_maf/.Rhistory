getwd()
setwd("../analysis_data")
setwd("analysis_data")
knitr::opts_knit$set(root.dir = normalizePath("analysis_data"))
getwd()
setwd("analysis_data")
# load maftools
library(maftools)
clinical <- read.csv("brca_clinical_data.csv")
setwd("../week5_more_clinical/analysis_data/")
knitr::opts_knit$set(root.dir = normalizePath("../week5_more_clinical/analysis_data/"))
# load maftools
library(maftools)
clinical <- read.csv("brca_clinical_data.csv")
getwd()
setwd("../week5_more_clinical/analysis_data/")
knitr::opts_knit$set(root.dir = normalizePath("../week5_more_clinical/analysis_data/"))
clinical <- read.csv("brca_clinical_data.csv")
getwd()
clinical <- read.csv("brca_clinical_data.csv")
knitr::opts_knit$set(root.dir = normalizePath("../../week4_clinical/week4_hw/brca_clinical_data.csv"))
knitr::opts_knit$set(root.dir = normalizePath("../../week4_clinical/week4_hw/"))
knitr::opts_knit$set(root.dir = normalizePath("../../week4_clinical/week4_hw"))
getwd()
knitr::opts_knit$set(root.dir = normalizePath("../week4_clinical/week4_hw/"))
clinical <- read.csv("brca_clinical_data.csv")
maf_object <- read.maf(maf = maf,
clinicalData = clinicalData,
isTCGA = TRUE)
getwd()
knitr::opts_knit$set(root.dir = normalizePath("../week5_more_clinical/analysis_data/"))
# install and load maftools and TCGAbiolinks
library(maftools)
library(TCGAbiolinks)
clinical <- read.csv("../analysis_data/brca_clinical_data.csv")
colnames(clinical)[ colnames(clinical) == "bcr_patient_barcode" ] <- "Tumor_Sample_Barcode"
# change the file path! make sure it's in your week4 folder
write.csv(clinical, "../analysis_data/brca_clinical_data.csv", row.names = FALSE)
maf_query <- GDCquery(
project = FILL IN HERE,
maf_query <- GDCquery(
project = "TCGA-BRCA",
data.category = "Simple Nucleotide Variation",
access = "open", # we only have access to somatic mutations which are open access
data.type = "Masked Somatic Mutation",
workflow.type = "Aliquot Ensemble Somatic Variant Merging and Masking"
)
GDCdownload(maf_query)
GDCdownload(maf_query)
maf <- GDCprepare(maf_query) # as long as it runs, ignore any errors
maf_object <- read.maf(maf = maf,
clinicalData = clinical,
isTCGA = TRUE)
maf_object <- read.maf(maf = maf,
clinicalData = clinicalData,
isTCGA = TRUE)
maf_object <- read.maf(maf = maf,
clinicalData = clinical,
isTCGA = TRUE)
geneA_maf <- subsetMaf(maf = maf,
genes = "TP53") ## fill in with your gene name as a string
geneA_maf <- subsetMaf(maf = maf.silent,
genes = "TP53") ## fill in with your gene name as a string
geneA_maf <- subsetMaf(maf = maf_object,
genes = "TP53") ## fill in with your gene name as a string
geneB_maf <- subsetMaf(maf = maf_object,
genes = "RYR2")
# write code here
str(maf_object)
head(geneA_maf@clinical.data)
head(geneA_maf@clinical.data$Tumor_Sample_Barcode)
head(geneA_maf@data$Tumor_Sample_Barcode)
head(geneB_maf@clinical.data$Tumor_Sample_Barcode)
mut_pats_geneA = ifelse(geneA_maf@clinical.data$Tumor_Sample_Barcode == geneB_maf@clinical.data$Tumor_Sample_Barcode, 0, 1)
mut_pats_geneA
mut_pats_geneB = ifelse(geneA_maf@clinical.data$Tumor_Sample_Barcode == geneB_maf@clinical.data$Tumor_Sample_Barcode, 0, 1)
mut_pats_geneB
mut_pats_geneA = geneA_maf@clinical.data$Tumor_Sample_Barcode == geneB_maf@clinical.data$Tumor_Sample_Barcode
mut_pats_geneA
mut_pats_geneA = geneA_maf@clinical.data$Tumor_Sample_Barcode
mut_pats_geneB = geneA_maf@clinical.data$Tumor_Sample_Barcode
num_pats_geneA = length(mut_pats_geneA)
num_pats_geneB = length(mut_pats_geneB)
?intersect
mut_pats_geneAB = intersect(mut_pats_geneA, mut_pats_geneB)
num_AB = length(mut_pats_geneAB)
num_A_only = num_pats_geneA - num_AB
num_B_only = num_pats_geneB - num_AB
nrow(maf_object@clinical.data$Tumor_Sample_Barcode)
nrow(maf_object@clinical.data)
num_neither = nrow(maf_object@clinical.data) - num_A_only - num_B_only - num_AB
num_neither
num_A_only
num_A_only
num_B_only
mut_pats_geneA = geneA_maf@clinical.data$Tumor_Sample_Barcode
mut_pats_geneB = geneB_maf@clinical.data$Tumor_Sample_Barcode
num_pats_geneA = length(mut_pats_geneA)
num_pats_geneB = length(mut_pats_geneB)
mut_pats_geneAB = intersect(mut_pats_geneA, mut_pats_geneB)
num_AB = length(mut_pats_geneAB)
num_A_only = num_pats_geneA - num_AB
num_B_only = num_pats_geneB - num_AB
num_A_only
num_B_only
num_neither = nrow(maf_object@clinical.data) - num_A_only - num_B_only - num_AB
num_neither
contig <- matrix(c(num_AB,
num_B_only,
num_A_only,
num_neither),
nrow=2)
# view the contingency table
contig
# view the contingency table as a mosaic
mosaicplot(contig)
?fisher_test
??fisher_test
fisher_test <- fisher.test(contig)
fisher_test
